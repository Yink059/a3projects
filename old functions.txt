useful stuff
///////////////////////////////////////////////////////////////////////



unit1 setvariable ["damageHist",[]];


///////////////////////////////////////////////////////////////////////



unit1 addEventHandler
	["handleDamage",
		{	_unit 	= _this select 0;
			_part 	= _this select 1;
			_dam	= _this select 2;
			_source	= _this select 4;
			_list 	= (_unit getvariable "damageHist") + [[_part,_dam,_source,diag_tickTime]];
			
			_unit setvariable ["damageHist", _list];
		}	
	];
	

	
///////////////////////////////////////////////////////////////////////	
	
	handleDamage eventhandlers passed array stuff
	
0	unit: Object - Object the event handler is assigned to.
1	selctionName: String - Name of the selection where the unit was damaged. "" for over-all structural damage, "?" for unknown selections.
2	damage: Number - Resulting level of damage for the selection.
3	source: Object - The source unit that caused the damage.
4	projectile: String - Classname of the projectile that caused inflicted the damage. ("" for unknown, such as falling damage.)

///////////////////////////////////////////////////////////////////////
{	
			_currentArray = _x;		//[[3,["",""]],[1,["",""]]];
			{	
				for [{_y=((count _x)-1)},{_y=0},{_y=_y-1}] do
				{	if (_source1 iskindof (_x select _y)) then
					{	_final = _currentarray select 0;
					};
				};
			} foreach (_x select 1);
			sleep 1;
			hint format["%1\n%2\n%3",_final,_x,_x select 1];
		} foreach _allArrays;
		
		
///////////////////////////////////////////////////////////////////////////
		{	if (_source1 iskindof _x) then
			{	_final = 3};
		} foreach yink_explosives;
		{	if (_source1 iskindof _x) then
			{	_final = 2};
		} foreach yink_bullets;
		{	if (_source1 iskindof _x) then
			{	_final = 1};
		} foreach yink_explosives;
		
///////////////////////////////////////////////////////////////////////////////
execVM "MedYink\variables.sqf";

yink_fnc_single_des	=
	{
		_source1 = _this select 0;
		_final = 0;
		
		{	if (_source1 iskindof _x) then
			{	_final = 3};
		} foreach yink_explosives;
		{	if (_source1 iskindof _x) then
			{	_final = 2};
		} foreach yink_bullets;
		{	if (_source1 iskindof _x) then
			{	_final = 1};
		} foreach yink_misc;
		
	
		_final
	};
	
	//used for generalizing injury data
yink_fnc_des_injury =
	{
		_partHit 	= _this select 0;
		_listUnit	= _this select 1;
		_tempList	= [_partHit,["misc",0],["bullet",0],["explosive",0]];
			{	if ((_partHit)==(_x select 0)) then
				{	_source1 	= _x select 2;
					_tempList0	= _tempList select 1;
					_tempList1	= _tempList select 2;
					_tempList2	= _tempList select 3;
					_tempList01 = ((_tempList select 1) select 1);
					_tempList11 = ((_tempList select 2) select 1);
					_tempList21 = ((_tempList select 3) select 1);
							
		{	if (_source1 iskindof _x) then
			{	_tempList1 set [1,_tempList21 + (_x select 1)};
		} foreach yink_explosives;
		{	if (_source1 iskindof _x) then
			{	_tempList1 set [1,_tempList11 + (_x select 1)};
		} foreach yink_bullets;
		{	if (_source1 iskindof _x) then
			{	_tempList1 set [1,_tempList01 + (_x select 1)};
		} foreach yink_misc;
				};
			} foreach _listUnit;
	
	_tempList
	};
	
	
//takes in a units damage data and sorts into a 5 index array
yink_fnc_part_list =
	{	_unit = _this select 0;
		_list = _unit getvariable "damageHist";
		_head	= [ ];//"head"
		_body	= [ ];//"body"
		_hands	= [ ];//"hands"
		_legs	= [ ];//"legs"
		_misc	= [ ];//""

		{	_part = _x select 0;
			switch (_part) do
			{		case "head"		: { _head 	= ["head"	,_list]	call yink_fnc_des_injury;};
					case "body"		: { _body 	= ["body"	,_list]	call yink_fnc_des_injury;};
					case "hands"	: { _hands 	= ["hands"	,_list]	call yink_fnc_des_injury;};
					case "legs"		: { _legs 	= ["legs"	,_list] call yink_fnc_des_injury;};
					case ""			: { _misc	= [""		,_list] call yink_fnc_des_injury;};
			};
		} foreach _list;
	_unit setvariable ["damageTotal",[_head,_body,_hands,_legs,_misc]];
	
	[_head,_body,_hands,_legs,_misc]
	};


//uses the damage list to deal bleed damage over time.	
yink_fnc_bleed_out =
	{	
		_unit = _this select 0;
		while {alive _unit} do
		{
			sleep 5;
			_list = _unit getVariable "damageTotal";
			{	_part = _x select 0;
				_mult = 1.0;
				switch (_part) do
				{	case "head"	: {_mult = 2.0};
					case "body"	: {_mult = 1.2};
					case "hands": {_mult = 0.5};
					case "legs" : {_mult = 0.8};
				};
				_bleed = ((_x select 1)/100) * _mult;
				_unit setdamage ((damage _unit)+_bleed);
			} foreach _list;
		};
	};
	
	
	
//healing function that takes the unit,part and item used and applies the heal accordingly
yink_fnc_heal =
	{
		_unit 	= _this select 0;
		_list = [_unit] call yink_fnc_part_list;
		_item 	= _this select 1;
		_part 	= _this select 2;
		_amount	= _this select 3;
		
		switch (_part) do
		{	case "head"	:
			{	_array = _list select 0;
				switch (_item) do
				{	case "bandage":
					{	_temp1 = 0;
						_list2 = _unit getvariable "damageHist";
						_list3 = _list2;
						_ran1 = (round(random 1)) + 2;
						_counter = 0;
						_temp2 = 3;
						{	
							if ((((_x select 0)=="head")&&(_temp1<0.35))||((_counter<1)&&((_x select 0)=="head"))) then
							{	_temp1 = _temp1 + (_x select 1);
								_counter = _counter + 1;
								_temp2 = [_x select 2] call yink_fnc_single_des;
								_unit sethit ["head",((((_list select 0) select _temp2) select 1) - (_x select 1))];
								_list2 = _list2 - [_x];
								_list = [_unit] call yink_fnc_part_list;
							};
						} foreach _list3;
						_unit setvariable ["damageHist",_list2];
					};
				};
			};
		
			case "body"	:
			{	_array = _list select 1;
				switch (_item) do
				{	case "bandage":
					{	_temp1 = 0;
						_list2 = _unit getvariable "damageHist";
						_list3 = _list2;
						_ran1 = 3;
						_counter = 0;
						{	
							if ((((_x select 0)=="body")&&(_temp1<0.35))||((_counter<1)&&((_x select 0)=="body"))) then
							{	_temp1 = _temp1 + (_x select 1);
								_counter = _counter + 1;
								_temp2 = [_x select 2] call yink_fnc_single_des;
								_unit sethit ["body",((((_list select 1) select _temp2) select 1) - (_x select 1))];
								_list2 = _list2 - [_x];
								_list = [_unit] call yink_fnc_part_list;
							};
						} foreach _list3;
						_unit setvariable ["damageHist",_list2];
						
					};
					case "morphine":
					{	if ((damage _unit)>0.30) then
						{	_unit setdamage ((damage _unit) - 0.30);
						}
						else
						{	_unit setdamage 0;
						};
					};
				};
			};
		
			case "hands":
			{	_array = _list select 2;
				switch (_item) do
				{	case "bandage":
					{	_temp1 = 0;
						_list2 = _unit getvariable "damageHist";
						_list3 = _list2;
						_ran1 = 3;
						_counter = 0;
						{	
							if ((((_x select 0)=="hands")&&(_temp1<0.35))||((_counter<1)&&((_x select 0)=="hands"))) then
							{	_temp1 = _temp1 + (_x select 1);
								_counter = _counter + 1;
								_temp2 = [_x select 2] call yink_fnc_single_des;
								_unit sethit ["hands",(((_list select 2) select _temp2) select 1)  - (_x select 1)];
								_list2 = _list2 - [_x];
								_list = [_unit] call yink_fnc_part_list;
							};
						} foreach _list3;
						_unit setvariable ["damageHist",_list2];
						
					};
					case "powder":
					{	if ((damage _unit)>0.30) then
						{	_unit setdamage ((damage _unit) - 0.30);
						}
						else
						{	_unit setdamage 0;
						};
					};
				};
			};
			case "legs":
			{	_array = _list select 2;
				switch (_item) do
				{	case "bandage":
					{	_temp1 = 0;
						_list2 = _unit getvariable "damageHist";
						_list3 = _list2;
						_ran1 = 3;
						_counter = 0;
						{	
							if ((((_x select 0)=="legs")&&(_temp1<0.35))||((_counter<1)&&((_x select 0)=="legs"))) then
							{	_temp1 = _temp1 + (_x select 1);
								_counter = _counter + 1;
								_temp2 = [_x select 2] call yink_fnc_single_des;
								_unit sethit ["legs",(((_list select 3) select _temp2) select 1)  - (_x select 1)];
								_list2 = _list2 - [_x];
								_list = [_unit] call yink_fnc_part_list;
							};
						} foreach _list3;
						_unit setvariable ["damageHist",_list2];
						
					};
					case "Splint":
					{	if ((damage _unit)>0.30) then
						{	_unit setdamage ((damage _unit) - 0.30);
						}
						else
						{	_unit setdamage 0;
						};
					};
				};
			};
			case "misc":
			{
				switch (_item) do
				{	case "First Aid":
					{		
							_temp1 = _unit getvariable "damageHist";
							{
								if ((_x select 0)=="") then
								{	_temp1 = _temp1 - [_x];
								};
							} foreach _temp1;
							_unit setvariable ["damageHist",_temp1];
							_unit setdamage ((damage _unit) - 0.05);

					};
				};
			};
		};

		_list = [_unit] call yink_fnc_part_list;
	};

